package stud.ntnu.backend.model;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

/**
 * <h2>Image</h2>
 * <p>Entity representing an image associated with a marketplace item.</p>
 * <p>This entity maps to the "item_images" table in the database and stores
 * references to images uploaded to Cloudinary.</p>
 *
 * <h3>Database Mapping</h3>
 * <p>Each Image instance corresponds to a record in the item_images table with:</p>
 * <ul>
 *   <li>A unique ID (primary key)</li>
 *   <li>An image URL referencing the stored image location</li>
 *   <li>A foreign key reference to the associated marketplace item</li>
 * </ul>
 *
 * <h3>Relationships</h3>
 * <p>Each Image belongs to a single Item (many-to-one relationship).</p>
 *
 * <h3>Usage Context</h3>
 * <p>Images are uploaded through the {@link stud.ntnu.backend.service.ImageService} and
 * typically displayed in item listings and detail views in the marketplace UI.</p>
 *
 * @see stud.ntnu.backend.model.Item
 * @see stud.ntnu.backend.service.ImageService
 */
@Getter
@Entity
@Table(name = "item_images")
public class Image {

  /**
   * <h3>ID</h3>
   * <p>Unique identifier for the image record.</p>
   * <p>Auto-generated by the database when the image is persisted.</p>
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  /**
   * <h3>URL</h3>
   * <p>The URL pointing to the stored image resource.</p>
   * <p>Typically a Cloudinary URL or other cloud storage location.</p>
   * <p>This field cannot be null as images must have a valid URL.</p>
   */
  @Setter
  @Column(name = "image_url", nullable = false)
  private String url;

  /**
   * <h3>Item</h3>
   * <p>The marketplace item this image is associated with.</p>
   * <p>Forms a many-to-one relationship with the Item entity.</p>
   * <p>This field cannot be null as all images must belong to a specific item.</p>
   */
  @Setter
  @ManyToOne
  @JoinColumn(name = "item_id", nullable = false)
  private Item item;
}